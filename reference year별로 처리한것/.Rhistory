round(p.value,4)
#여기부터
grid <- seq(-4, 4, length = 100)
plot(grid, dt(grid, n - p - 1), type = "l",
xlab = "", ylab = "", main = "t(n - p - 1)")
abline(v = t.stat, col = 2, lwd = 2, lty = 2)
# inference about q * beta
q <- c(0, 1, 1, 1, 1, 1, 1)
q.beta <- t(q) %*% beta
# confidence interval for beta1 - beta2
alpha <- 0.95
t.alpha <- qt(1-alpha/2, n - p - 1)
se.beta <- sqrt(t(q) %*% cc %*% q) * sigma
moe <- t.alpha * se.beta
c(q.beta - moe, q.beta + moe)
# test H0: q^T beta = c
c.value <- 0
t.stat <- (q.beta - c.value) / se.beta
print(t.stat)
p.value <- 2 * (1 - pt(t.stat, n - p - 1))
print(p.value)
# global test
SSR <- t(X %*% beta - mean(y)) %*% (X %*% beta - mean(y))
print(SSR)
F.stat <- SSR/(p * MSE)
print(F.stat)
# alternative approach
Q <- t(cbind(rep(0, p), diag(2)))
temp <- t(Q) %*% cc %*% Q
SSR2 <- t(beta) %*% Q %*% solve(temp) %*% t(Q) %*% beta
print(SSR2)
F.stat2 <- SSR2/(ncol(Q) * MSE)
print(F.stat2)
# Testing Subset of Regression Coefficients Equal to Zero
# global test - version 3 (based on SSE)
tilde.X <- matrix(1, n, 1)
tilde.beta <- solve(t(tilde.X) %*% tilde.X) %*% t(tilde.X) %*% y
tilde.y <- tilde.X %*% tilde.beta
SSE.r <- t(y - tilde.y) %*% (y - tilde.y)
SSE.f <- (t(r) %*% r)
F.stat3 <- ((SSE.r - SSE.f)/((n - 1) - (n - p - 1)))/(SSE.f / (n - p - 1))
print(F.stat3)
# global test - version 4 (based on R2)
R2.r <- 1 - SSE.r/SST
R2.f <- 1 - SSE.f/SST
F.stat4 <- ((R2.f - R2.r)/(p - 0))/((1 - R2.f) / (n - p - 1))
print(F.stat4)
print(SSR)
print(p.value)
c.value <- 3
t.stat <- (q.beta - c.value) / se.beta
print(t.stat)
p.value <- 2 * (1 - pt(t.stat, n - p - 1))
print(p.value)
alpha <- 0.95
t.alpha <- qt(1-alpha/2, n - p - 1)
se.beta <- sqrt(t(q) %*% cc %*% q) * sigma
moe <- t.alpha * se.beta
c(q.beta - moe, q.beta + moe)
c.value <- 3
q <- c(0,0,0,1,1,0,0)
q.beta <- t(q)%*%beta
t.stat <- (q.beta - c.value) / se.beta
print(t.stat)
p.value <- 2 * (1 - pt(t.stat, n - p - 1))
print(p.value)
c.value <- 0
t.stat <- (beta - c.value) / se.beta
c.value <- 0
t.stat <- (beta - c.value) / se.beta
# confidence interval
alpha <- 0.95
t.alpha <- qt(1-alpha/2, n - p - 1)
se.beta <- sqrt(diag(cc))*as.vector(sigma)
moe <- t.alpha*se.beta
upper <- beta - moe
lower <- beta + moe
c(lower, upper)
# test H0: beta1 = c.value1
c.value <- 0
t.stat <- (beta - c.value) / se.beta
print(t.stat)
p.value <- 2 * (1 - pt(abs(t.stat), n - p - 1))
round(p.value,4)
alpha <- 0.95
t.alpha <- qt(1-alpha/2, n - p - 1)
se.beta <- sqrt(t(q) %*% cc %*% q) * sigma
moe <- t.alpha * se.beta
c(q.beta - moe, q.beta + moe)
c.value <- 3
q <- c(0,0,0,1,1,0,0)
q.beta <- t(q)%*%beta
t.stat <- (q.beta - c.value) / se.beta
print(t.stat)
p.value <- 2 * (1 - pt(t.stat, n - p - 1))
# test H0: q^T beta = c
c.value <- 3
q <- c(0,0,0,1,1,0,0)
q.beta <- t(q)%*%beta
t.stat <- (q.beta - c.value) / se.beta
print(t.stat)
p.value <- 2 * (1 - pt(t.stat, n - p - 1))
print(p.value)
SSR <- t(X %*% beta - mean(y)) %*% (X %*% beta - mean(y))
print(SSR)
F.stat <- SSR/(p * MSE)
print(F.stat)
Q <- t(cbind(rep(0, p), diag(2)))
temp <- t(Q) %*% cc %*% Q
Q <- t(cbind(rep(0, p), diag(2)))
temp <- t(Q) %*% cc %*% Q
Q
tilde.X <- matrix(1, n, 1)
tilde.beta <- solve(t(tilde.X) %*% tilde.X) %*% t(tilde.X) %*% y
tilde.y <- tilde.X %*% tilde.beta
SSE.r <- t(y - tilde.y) %*% (y - tilde.y)
SSE.f <- (t(r) %*% r)
View(tilde.y)
setwd("C:/Users/양수형/Desktop/2학기/통프입/R 프로그래밍 실습파일(1)")
address <- scan("President Moon's Inaugural Address.txt", what= "character")
address.n <- scan("President Moon's Inaugural Address.txt", what= "character", sep="\n")
head(address.n)
address.n2 <- gsub(",", "", address.n)
address.n2 <- gsub("\\.","", address.n2)
address.n2 <- gsub("\\!", "", address.n2)
address.n2 <- gsub("\\?","",address.n2)
compare <- data.frame(origin=address.n, new=address.n2)
head(compare,1)
address.n3 <- tolower(address.n2)
names(address.n3) <- 1:13
head(address.n3,1)
address.new <- strsplit(address.n3, " ")
counting <- sapply(address.new, length)
line <- sort(counting, decreasing = TRUE)
line.a <- line[counting>1]
par(mar=c(4,6,4,2))
barplot(rev(line.a), horiz=TRUE, las=2, main="President Moon's speech")
#2.
library(tm)
address.word <- scan( "President Moon's Inaugural Address.txt", what= "character")
address.word2 <- gsub( ",", "", address.word)
address.word2 <- gsub( "\\.", "", address.word2)
address.word2 <- tolower( address.word2 )
address.revised <- address.word2[ !( address.word2 %in% stopwords( "en" ))]
address.revised <- gsub( "\\'", "", address.revised)
tab.word <- table( address.revised )
tab.word2 <- sort( tab.word, decreasing = TRUE )
tab.2 <- tab.word2[ tab.word2 > 2 ]
tab.2
par(mar = c(3,7,1,4))
barplot( rev(tab.2), horiz=TRUE, las=2, main = "Word Frequency over 3")
tab.2
country <- read.csv("countries of the word2.csv", header=TRUE)
setwd("C:/Users/양수형/Desktop/BigData-Analysis-master/BigData-Analysis-master")
country <- read.csv("countries of the word2.csv", header=TRUE)
country <- read.csv("countries.csv", header=TRUE)
country.1 <- if ("AFRICA" %in% country$Region) "AFRICA"
country$Region["AFRICA" %in% country$Region] <- "AFRICA"
View(country)
country$Region[ country$Region%in%"AFRICA" ] <- "AFRICA"
View(country)
country$Region[ country$Region == "AFRICA" ] <- "AFRICA"
country <- read.csv("countries.csv", header=TRUE)
country$Region[ country$Region == "AFRICA" ] <- "AFRICA"
View(country)
country$Region %in% "AFRICA"
country$Region["AFRICA"]
grep(country$Region["AFRICA"])
grep(country$Region,"AFRICA")
grep("AFRICA",country$Region)
g <- grep("AFRICA",country$Region)
country$Region[g] <- "AFRICA"
View(country)
amer <- grep("AMER", country$Region)
country$Regionp[amer] <- "AMERICA"
country$Region[amer] <- "AMERICA"
View(country)
eu <- grep("EUROPE", country$Region)
country$Region[eu] <- "EUROPE"
asia <- grep("ASIA", country$Region)
country$Region[asia] <- "ASIA"
View(country)
near <- grep("EAST", country$Region)
country$Region[near] <- "ASIA"
ind <- grep("IND", country$Region)
country$Region[ind] <- "ASIA"
oce <- grep("OCEANIA", country$Region)
country$Region[oce] <- "ASIA"
View(country)
bal <- grep("BALTICS", country$Region)
bal <- grep("BALTICS", country$Region)
country$Region[bal] <- "EUROPE"
View(country)
country2 <- write.csv( country, "Continent")
country2 <- write.csv( country, "Continent.csv")
GDP <- read.csv("gdp1.csv",header=TRUE)
code <- GDP$Country.Code
code <- cbind(GDP$Country.Name ,GDP$Country.Code)
View(code)
View(code)
code <- read.csv("code.csv", header=T)
View(code)
code <- read.csv("code.csv", header=T)
View(code)
country.code <- code$Country.Code[code$Country.Name == country2$Country.Name]
country.code <- code$country2.Code[code$Country.Name == country2$Country.Name]
is.na(code)
country.code <- code$Country.Code[code$Country.Name == country2$Country.Name]
cbind(country2, country.code)
country.code
country.code <- code$Country.Code[country2$Country.Name==code$Country.Name]
country.code <- code$Country.Code[country2$Country.Name == code$Country.Name]
country2$Country.Name == code$Country.Name
country2 <- write.csv( country, "Continent.csv")
GDP <- read.csv("gdp1.csv",header=TRUE)
sanitation <- read.csv("sanitation1.csv", header=TRUE)
country <- read.csv("countries.csv", header=TRUE)
g <- grep("AFRICA",country$Region)
country$Region[g] <- "AFRICA"
amer <- grep("AMER", country$Region)
country$Region[amer] <- "AMERICA"
eu <- grep("EUROPE", country$Region)
country$Region[eu] <- "EUROPE"
asia <- grep("ASIA", country$Region)
country$Region[asia] <- "ASIA"
near <- grep("EAST", country$Region)
country$Region[near] <- "ASIA"
ind <- grep("IND", country$Region)
country$Region[ind] <- "ASIA"
oce <- grep("OCEANIA", country$Region)
country$Region[oce] <- "ASIA"
bal <- grep("BALTICS", country$Region)
country$Region[bal] <- "EUROPE"
name <- country$Country
name
code <- read.csv("code.csv", header=T)
country.code <- code$Country.Code[ name == code$Country.Name]
name == code$Country.Name
country.code <- code$Country.Code[ name %in% code$Country.Name]
country.code
name %in5 code$Country.Name
name %in% code$Country.Name
compare <- data.frame(name, code$Country.Name)
country.code <- code$Country.Code[ name %in% code$Country.Name]
country.code
country.code <- code$Country.Code[code$Country.Name %in% name]
country.code
name %in% code$Country.Name
cbind(name, code$Country.Name)
country$Country
country$Region
factor(country)
levels(country)
levels(country)
levels(country2)
levels(country$Region)
levels(country2$Region)
country <- read.csv("countries.csv", header=TRUE)
g <- grep("AFRICA",country$Region)
country$Region[g] <- "AFRICA"
amer <- grep("AMER", country$Region)
country$Region[amer] <- "AMERICA"
country$Region[eu] <- "EUROPE"
eu <- grep("EUROPE", country$Region)
asia <- grep("ASIA", country$Region)
rm(list=ls())
setwd("C:/Users/양수형/Desktop/BigData-Analysis-master/BigData-Analysis-master")
GDP <- read.csv("gdp1.csv",header=TRUE)
sanitation <- read.csv("sanitation1.csv", header=TRUE)
country <- read.csv("countries.csv", header=TRUE)
g <- grep("AFRICA",country$Region)
country$Region[g] <- "AFRICA"
amer <- grep("AMER", country$Region)
country$Region[amer] <- "AMERICA"
country$Region[eu] <- "EUROPE"
eu <- grep("EUROPE", country$Region)
asia <- grep("ASIA", country$Region)
g <- grep("AFRICA",country$Region)
country$Region[g] <- "AFRICA"
amer <- grep("AMER", country$Region)
country$Region[amer] <- "AMERICA"
eu <- grep("EUROPE", country$Region)
country$Region[eu] <- "EUROPE"
asia <- grep("ASIA", country$Region)
country$Region[asia] <- "ASIA"
near <- grep("EAST", country$Region)
country$Region[near] <- "ASIA"
ind <- grep("IND", country$Region)
country$Region[ind] <- "ASIA"
oce <- grep("OCEANIA", country$Region)
country$Region[oce] <- "ASIA"
bal <- grep("BALTICS", country$Region)
country$Region[bal] <- "EUROPE"
country2 <- write.csv( country, "Continent.csv")
country$Region[bal] <- "EUROPE"
country3 <- write.csv( country, "Continent.csv")
write.csv( country, "Continent2.csv")
name <- country$Country
class(country$Country)
code <- read.csv("code.csv", header=T)
name <- as.character(country$Country)
new.code <- as.character(code$Country.Name)
country.code <- code$Country.Code[name == new.code]
country.code <- code$Country.Code[new.code %in% name]
new.code == name
country.code <- code$Country.Code[new.code == name]
country.code <- code$Country.Code[new.code %in% name]
grep(name, new.code)
grep(name, code$Country.Name)
common <- function(data1, data2) {
if(class(data1) == "data.frame") id.1 <- as.character(data1[,2])
else id.1 <- data1
if(class(data2) == "data.frame") id.2 <- as.character(data2[,2])
else id.2 <- data2
n.1 <- length(id.1)
n.2 <- length(id.2)
common <- rep(NULL, min(n.1, n.2))
head.1 <- 1
head.2 <- 1
i <- 1
while(head.1 <= n.1 & head.2 <= n.2) { # 1)
if(id.1[head.1] <= id.2[head.2]) {
if(id.1[head.1] == id.2[head.2]) {
common[i] <- id.1[head.1]
i <- i+1
head.1 <- head.1 + 1
head.2 <- head.2 + 1
}
else head.1 <- head.1 + 1 # 2.1)
}
else head.2 <- head.2 + 1 # 2.2)
}
return(common)
}
common(country, code)
common(country, gdp)
common(country, GDP)
country[,2]
common <- function(data1, data2) {
if(class(data1) == "data.frame") id.1 <- as.character(data1[,1])
else id.1 <- data1
if(class(data2) == "data.frame") id.2 <- as.character(data2[,1])
else id.2 <- data2
n.1 <- length(id.1)
n.2 <- length(id.2)
common <- rep(NULL, min(n.1, n.2))
head.1 <- 1
head.2 <- 1
i <- 1
while(head.1 <= n.1 & head.2 <= n.2) { # 1)
if(id.1[head.1] <= id.2[head.2]) {
if(id.1[head.1] == id.2[head.2]) {
common[i] <- id.1[head.1]
i <- i+1
head.1 <- head.1 + 1
head.2 <- head.2 + 1
}
else head.1 <- head.1 + 1 # 2.1)
}
else head.2 <- head.2 + 1 # 2.2)
}
return(common)
}
common(country, GDP)
country[,1]
code[,1]
class(code)
class(country)
common(country, GDP)
common(country, code)
if(class(country) == "data.frame") id.1 <- as.character(data1[,1])
if(class(country) == "data.frame") id.1 <- as.character(country[,1])
if(class(code) == "data.frame") id.2 <- as.character(data2[,1])
if(class(code) == "data.frame") id.2 <- as.character(code[,1])
id.1
id.2
country.code <- read.csv("country_code.csv", header=T)
if(class(country) == "data.frame") id.1 <- as.character(country[,1])
if(class(country.code) == "data.frame") id.2 <- as.character(country.code[,1])
id.2
n.1 <- length(id.1)
n.2 <- length(id.2)
common <- rep(NULL, min(n.1, n.2))
head.1 <- 1
head.2 <- 1
i <- 1
while(head.1 <= n.1 & head.2 <= n.2) { # 1)
if(id.1[head.1] <= id.2[head.2]) {
if(id.1[head.1] == id.2[head.2]) {
common[i] <- id.1[head.1]
i <- i+1
head.1 <- head.1 + 1
head.2 <- head.2 + 1
}
else head.1 <- head.1 + 1 # 2.1)
}
else head.2 <- head.2 + 1 # 2.2)
}
return(common)
common
common <- rep(NULL, min(n.1, n.2))
common
setwd("C:/Users/양수형/Desktop/BigData-Analysis-master/BigData-Analysis-master")
GDP <- read.csv("gdp1.csv",header=TRUE)
sanitation <- read.csv("sanitation1.csv", header=TRUE)
setwd("C:/Users/양수형/Desktop/BigData-Analysis-master/BigData-Analysis-master2")
GDP <- read.csv("gdp1.csv",header=TRUE)
sanitation <- read.csv("sanitation1.csv", header=TRUE)
country <- read.csv("countries.csv", header=TRUE)
g <- grep("AFRICA",country$Region)
country$Region[g] <- "AFRICA"
amer <- grep("AMER", country$Region)
country$Region[amer] <- "AMERICA"
eu <- grep("EUROPE", country$Region)
country$Region[eu] <- "EUROPE"
asia <- grep("ASIA", country$Region)
country$Region[asia] <- "ASIA"
near <- grep("EAST", country$Region)
country$Region[near] <- "ASIA"
ind <- grep("IND", country$Region)
country$Region[ind] <- "ASIA"
oce <- grep("OCEANIA", country$Region)
country$Region[oce] <- "ASIA"
bal <- grep("BALTICS", country$Region)
country$Region[bal] <- "EUROPE"
write.csv( country, "Continent2.csv")
name <- as.character(country$Country)
write.csv( country, "Continent2.csv")
country.code <- read.csv("country_code.csv", header=T)
intersect(country, country.code)
name <- as.character(country$Country)
code <- as.character(country.code$Country.Code)
intersect(country, country.code)
intersect(name, code)
intersect(name, code)
setwd("C:/Users/양수형/Documents/GitHub/BigData-Analysis/reference year별로 처리한것")
co.2 <- read.csv("CO.2.revised", header=T)
co.2 <- read.csv("CO.2.revised.csv", header=T)
GDP <- read.csv("GDP.revised.csv", header=T)
merge(co2, GDP, by = Country.Name)
merge(co2, GDP, by = "Country.Name")
intersect(co.2, GDP)
intersect(co.2$Country.Name, GDP$Country.Name)
setwd("C:/Users/양수형/Documents/GitHub/BigData-Analysis/raw data")
CO.2 <- read.csv("CO2 raw data.csv", header = T)
CO.2.1 <- recentYear(CO.2)
recentYear <- function(data) {
data1 <- data[,c(1,2)]
data <- data[,-c(1,2)]
for(i in 1:nrow(data)){
index <- !is.na(data[i,])
index.1 <- order(index)[length(index)]
data1$referenceYear[i] <- colnames(data)[index.1]
data1$total[i] <- data[i, index.1]
}
return(data1)
}
CO.2.1 <- recentYear(CO.2)
CO.2.1 <- na.omit(CO.2.1)
CO.2.1 <- CO.2.1[,-3]
colnames(CO.2.1) <- c("Country.Name", "Country.Code", "CO.2")
write.csv(CO.2.1, "CO.2.revised.CSV", row.names = F)
Alchol <- read.csv("Alchol raw data.csv", header = T)
Alchol.1 <- recentYear(Alchol)
Alchol.1 <- na.omit(Alchol.1)
Alchol.1 <- Alchol.1[,-3]
colnames(Alchol.1) <- c("Country.Name", "Country.Code", "Alchol")
write.csv(CO.2.1, "Alchol.revised.CSV", row.names = F)
write.csv(Alchol.1, "Alchol.revised.CSV", row.names = F)
write.csv(Alchol.1, "Alchol.revised.CSV", row.names = F)
setwd("C:/Users/양수형/Documents/GitHub/BigData-Analysis/country code and continent")
continent <- read.csv("all")
continent <- read.csv("all.cosv")
continent <- read.csv("all.csv")
oce <- grep("Oceania", continent[,4])
colnames(continent) <- c("Country.Name", "Region.Code", "Country.Code", "Continent", "Countinent.Region")
oce <- grep("Oceania", continent$Continent)
continent$Continent[oce] <- "Asia"
continent
View(continent)
write.csv(continent, "All.asia.csv")
write.csv(continent, "All.asia.csv", row.names = FALSE)
setwd("C:/Users/양수형/Documents/GitHub/BigData-Analysis/reference year별로 처리한것")
read.csv("Smoking.revised.revised.csv", header=T)
smoking <- read.csv("Smoking.revised.revised.csv", header=T)
smoking <- smoking[order(smoking$Country.Name),]
code <- read.csv("국가코드 완성.csv", header.T)
rm(list=ls())
setwd("C:/Users/양수형/Documents/GitHub/BigData-Analysis/reference year별로 처리한것")
smoking <- read.csv("Smoking.revised.revised.csv", header=T)
smoking <- smoking[order(smoking$Country.Name),]
code <- read.csv("국가코드 완성.csv", header.T)
code <- read.csv("국가코드 완성.csv", header=T)
c.name <- as.character(code$Country.Name)
o.name <- as.character(smoking$Country.Name)
common <- intersect(c.name, o.name)
code <- code[order(code$Country.Name),]
View(code)
o.name1 <- code[code$Country.Name %in% common,]
smoking0 <- smoking[smoking$Country.Name %in% common,]
smoking1 <- cbind(o.name1, obesity0[,-1])
smoking1 <- cbind(o.name1, smoking0[,-1])
smoking1$X2016[as.character(smoking1$X2016) == "No d"] <- NA
smoking1 <- na.omit(smoking1)
smoking.2016 <- smoking1[,c(1, 2, 6)]
View(smoking1)
View(smoking)
View(smoking0)
View(smoking1)
View(smoking)
write.csv(smoking1, "smokingwithcode.csv")
write.csv(smoking1, "smokingwithcode.csv", row.names=F)
